<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	default-lazy-init="true" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.lashou.redis" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		 <property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="connectionFactory" ref="jedisConnectionFactory" />  
	</bean>
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<!-- <property name="hostName" value="${treasure.redis.ip?10.1.33.201}" 
			/> <property name="database" value="${treasure.redis.database?11}" /> <property 
			name="port" value="${treasure.redis.port?6379}" /> -->
		<!-- <property name="timeout" value="${treasure.redis.timeout?10800}" /> -->
		<!-- <property name="password" value="${treasure.redis.password}"/> -->
		<property name="poolConfig">
			<bean class="redis.clients.jedis.JedisPoolConfig">
				<property name="maxTotal" value="10" />
				<property name="maxIdle" value="5" />
				<property name="maxWaitMillis" value="5" />
				<property name="testOnBorrow" value="true" />
				<property name="testOnReturn" value="false" />
			</bean>
		</property>
		<!-- <property name="cluster"> <set> <bean class="redis.clients.jedis.HostAndPort"> 
			<constructor-arg name="host" value="10.1.34.201"/> <constructor-arg name="port" 
			value="6379"/> </bean> <bean class="redis.clients.jedis.HostAndPort"> <constructor-arg 
			name="host" value="10.1.30.83"/> <constructor-arg name="port" value="6379"/> 
			</bean> </set> </property> -->
		<constructor-arg name="clusterConfig" ref="clusterConfig" />



	</bean>

	<bean name="clusterConfig"
		class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="clusterNodes">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.34.201"></constructor-arg>
					<constructor-arg name="port" value="7000"></constructor-arg>
				</bean>
				<!-- <bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.34.201"></constructor-arg>
					<constructor-arg name="port" value="7001"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.34.201"></constructor-arg>
					<constructor-arg name="port" value="7002"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.34.201"></constructor-arg>
					<constructor-arg name="port" value="7003"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.34.201"></constructor-arg>
					<constructor-arg name="port" value="7004"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="10.1.34.201"></constructor-arg>
					<constructor-arg name="port" value="7005"></constructor-arg> 
				</bean>-->
			</set>
		</property>
	</bean>
</beans>
